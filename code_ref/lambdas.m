function [lambt,lambn, lam_n]=lambdas(X,sigma,tau)

m=0.3;
g=10;
l=0.15;
mu=0.3;

x=X(1);y=X(2);theta1=X(3);theta2=X(4);
xd=X(5);yd=X(6);theta1d=X(7);theta2d=X(8);
%% general

lambt=(3*m*(((3*(8*cos(theta1 + theta2) + 8*cos(theta1) - 3*cos(theta1 + theta2)*sin(theta1)^2 - 3*sin(theta1 + theta2)^2*cos(theta1) + 3*cos(theta1 + theta2)*sin(theta1 + theta2)*sin(theta1) + 3*sin(theta1 + theta2)*cos(theta1)*sin(theta1)))/(m*(24*l*cos(theta1)^2 - 64*l + 24*l*sin(theta1)^2 + 24*l*cos(theta1 + theta2)^2 + 24*l*sin(theta1 + theta2)^2 - 9*l*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*l*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*l*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1))) - (12*l*cos(theta1)*(3*sin(theta1 + theta2)*sin(theta1) - 3*cos(theta1 + theta2)^2 - 3*sin(theta1 + theta2)^2 + 3*cos(theta1 + theta2)*cos(theta1) + 8))/(m*(24*l^2*cos(theta1 + theta2)^2 + 24*l^2*sin(theta1 + theta2)^2 + 24*l^2*cos(theta1)^2 + 24*l^2*sin(theta1)^2 - 64*l^2 - 9*l^2*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*l^2*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*l^2*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1))))*(tau - g*l*m*cos(theta1 + theta2)) - (2*g*m - l*m*(theta1d^2*sin(theta1 + theta2) - theta1d^2*sin(theta1) + theta2d^2*sin(theta1 + theta2) + 2*theta1d*theta2d*sin(theta1 + theta2)))*((4*(3*sin(theta1 + theta2)^2 + 3*sin(theta1)^2 - 8))/(m*(24*cos(theta1 + theta2)^2 + 24*sin(theta1 + theta2)^2 + 24*cos(theta1)^2 + 24*sin(theta1)^2 - 9*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1) - 64)) + (6*l*cos(theta1)*(8*cos(theta1) - 3*sin(theta1 + theta2)^2*cos(theta1) + 3*cos(theta1 + theta2)*sin(theta1 + theta2)*sin(theta1)))/(m*(24*l*cos(theta1)^2 - 64*l + 24*l*sin(theta1)^2 + 24*l*cos(theta1 + theta2)^2 + 24*l*sin(theta1 + theta2)^2 - 9*l*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*l*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*l*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1)))) + 2*l*theta1d^2*sin(theta1) + l*m*((12*(cos(theta1)*sin(theta1) + cos(theta1 + theta2)*sin(theta1 + theta2)))/(m*(24*cos(theta1 + theta2)^2 + 24*sin(theta1 + theta2)^2 + 24*cos(theta1)^2 + 24*sin(theta1)^2 - 9*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1) - 64)) - (6*l*cos(theta1)*(8*sin(theta1) - 3*cos(theta1 + theta2)^2*sin(theta1) + 3*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)))/(m*(24*l*cos(theta1)^2 - 64*l + 24*l*sin(theta1)^2 + 24*l*cos(theta1 + theta2)^2 + 24*l*sin(theta1 + theta2)^2 - 9*l*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*l*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*l*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1))))*(theta1d^2*cos(theta1 + theta2) - theta1d^2*cos(theta1) + theta2d^2*cos(theta1 + theta2) + 2*theta1d*theta2d*cos(theta1 + theta2)) + g*l*m*(cos(theta1 + theta2) - cos(theta1))*((3*(8*cos(theta1) - 3*sin(theta1 + theta2)^2*cos(theta1) + 3*cos(theta1 + theta2)*sin(theta1 + theta2)*sin(theta1)))/(m*(24*l*cos(theta1)^2 - 64*l + 24*l*sin(theta1)^2 + 24*l*cos(theta1 + theta2)^2 + 24*l*sin(theta1 + theta2)^2 - 9*l*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*l*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*l*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1))) + (12*l*cos(theta1)*(3*cos(theta1 + theta2)^2 + 3*sin(theta1 + theta2)^2 - 8))/(m*(24*l^2*cos(theta1 + theta2)^2 + 24*l^2*sin(theta1 + theta2)^2 + 24*l^2*cos(theta1)^2 + 24*l^2*sin(theta1)^2 - 64*l^2 - 9*l^2*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*l^2*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*l^2*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1)))))*(3*cos(theta1 + theta2)*sin(theta1 + theta2)*sin(theta1)^2 - 2*cos(theta1 + theta2)*sin(theta1 + theta2) - 18*cos(theta1)*sin(theta1) + 9*cos(theta1 + theta2)^2*cos(theta1)*sin(theta1) + 9*sin(theta1 + theta2)^2*cos(theta1)*sin(theta1) + 3*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)^2))/(2*(12*cos(theta1)^2 + 12*sin(theta1)^2 - 9*cos(theta1 + theta2)^2*cos(theta1)^2 - 9*sin(theta1 + theta2)^2*sin(theta1)^2 - 18*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1) + 4)) - (m*(((3*(8*sin(theta1 + theta2) + 8*sin(theta1) - 3*sin(theta1 + theta2)*cos(theta1)^2 - 3*cos(theta1 + theta2)^2*sin(theta1) + 3*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1) + 3*cos(theta1 + theta2)*cos(theta1)*sin(theta1)))/(m*(24*l*cos(theta1)^2 - 64*l + 24*l*sin(theta1)^2 + 24*l*cos(theta1 + theta2)^2 + 24*l*sin(theta1 + theta2)^2 - 9*l*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*l*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*l*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1))) - (12*l*sin(theta1)*(3*sin(theta1 + theta2)*sin(theta1) - 3*cos(theta1 + theta2)^2 - 3*sin(theta1 + theta2)^2 + 3*cos(theta1 + theta2)*cos(theta1) + 8))/(m*(24*l^2*cos(theta1 + theta2)^2 + 24*l^2*sin(theta1 + theta2)^2 + 24*l^2*cos(theta1)^2 + 24*l^2*sin(theta1)^2 - 64*l^2 - 9*l^2*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*l^2*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*l^2*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1))))*(tau - g*l*m*cos(theta1 + theta2)) + (2*g*m - l*m*(theta1d^2*sin(theta1 + theta2) - theta1d^2*sin(theta1) + theta2d^2*sin(theta1 + theta2) + 2*theta1d*theta2d*sin(theta1 + theta2)))*((12*(cos(theta1)*sin(theta1) + cos(theta1 + theta2)*sin(theta1 + theta2)))/(m*(24*cos(theta1 + theta2)^2 + 24*sin(theta1 + theta2)^2 + 24*cos(theta1)^2 + 24*sin(theta1)^2 - 9*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1) - 64)) - (6*l*sin(theta1)*(8*cos(theta1) - 3*sin(theta1 + theta2)^2*cos(theta1) + 3*cos(theta1 + theta2)*sin(theta1 + theta2)*sin(theta1)))/(m*(24*l*cos(theta1)^2 - 64*l + 24*l*sin(theta1)^2 + 24*l*cos(theta1 + theta2)^2 + 24*l*sin(theta1 + theta2)^2 - 9*l*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*l*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*l*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1)))) - 2*l*theta1d^2*cos(theta1) - l*m*((4*(3*cos(theta1 + theta2)^2 + 3*cos(theta1)^2 - 8))/(m*(24*cos(theta1 + theta2)^2 + 24*sin(theta1 + theta2)^2 + 24*cos(theta1)^2 + 24*sin(theta1)^2 - 9*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1) - 64)) + (6*l*sin(theta1)*(8*sin(theta1) - 3*cos(theta1 + theta2)^2*sin(theta1) + 3*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)))/(m*(24*l*cos(theta1)^2 - 64*l + 24*l*sin(theta1)^2 + 24*l*cos(theta1 + theta2)^2 + 24*l*sin(theta1 + theta2)^2 - 9*l*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*l*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*l*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1))))*(theta1d^2*cos(theta1 + theta2) - theta1d^2*cos(theta1) + theta2d^2*cos(theta1 + theta2) + 2*theta1d*theta2d*cos(theta1 + theta2)) + g*l*m*(cos(theta1 + theta2) - cos(theta1))*((3*(8*sin(theta1) - 3*cos(theta1 + theta2)^2*sin(theta1) + 3*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)))/(m*(24*l*cos(theta1)^2 - 64*l + 24*l*sin(theta1)^2 + 24*l*cos(theta1 + theta2)^2 + 24*l*sin(theta1 + theta2)^2 - 9*l*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*l*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*l*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1))) + (12*l*sin(theta1)*(3*cos(theta1 + theta2)^2 + 3*sin(theta1 + theta2)^2 - 8))/(m*(24*l^2*cos(theta1 + theta2)^2 + 24*l^2*sin(theta1 + theta2)^2 + 24*l^2*cos(theta1)^2 + 24*l^2*sin(theta1)^2 - 64*l^2 - 9*l^2*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*l^2*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*l^2*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1)))))*(3*sin(theta1 + theta2)^2 - 24*cos(theta1)^2 + 3*sin(theta1)^2 + 18*cos(theta1 + theta2)^2*cos(theta1)^2 + 9*sin(theta1 + theta2)^2*cos(theta1)^2 + 9*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1) - 8))/(12*cos(theta1)^2 + 12*sin(theta1)^2 - 9*cos(theta1 + theta2)^2*cos(theta1)^2 - 9*sin(theta1 + theta2)^2*sin(theta1)^2 - 18*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1) + 4);
lambn=(m*(((3*(8*cos(theta1 + theta2) + 8*cos(theta1) - 3*cos(theta1 + theta2)*sin(theta1)^2 - 3*sin(theta1 + theta2)^2*cos(theta1) + 3*cos(theta1 + theta2)*sin(theta1 + theta2)*sin(theta1) + 3*sin(theta1 + theta2)*cos(theta1)*sin(theta1)))/(m*(24*l*cos(theta1)^2 - 64*l + 24*l*sin(theta1)^2 + 24*l*cos(theta1 + theta2)^2 + 24*l*sin(theta1 + theta2)^2 - 9*l*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*l*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*l*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1))) - (12*l*cos(theta1)*(3*sin(theta1 + theta2)*sin(theta1) - 3*cos(theta1 + theta2)^2 - 3*sin(theta1 + theta2)^2 + 3*cos(theta1 + theta2)*cos(theta1) + 8))/(m*(24*l^2*cos(theta1 + theta2)^2 + 24*l^2*sin(theta1 + theta2)^2 + 24*l^2*cos(theta1)^2 + 24*l^2*sin(theta1)^2 - 64*l^2 - 9*l^2*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*l^2*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*l^2*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1))))*(tau - g*l*m*cos(theta1 + theta2)) - (2*g*m - l*m*(theta1d^2*sin(theta1 + theta2) - theta1d^2*sin(theta1) + theta2d^2*sin(theta1 + theta2) + 2*theta1d*theta2d*sin(theta1 + theta2)))*((4*(3*sin(theta1 + theta2)^2 + 3*sin(theta1)^2 - 8))/(m*(24*cos(theta1 + theta2)^2 + 24*sin(theta1 + theta2)^2 + 24*cos(theta1)^2 + 24*sin(theta1)^2 - 9*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1) - 64)) + (6*l*cos(theta1)*(8*cos(theta1) - 3*sin(theta1 + theta2)^2*cos(theta1) + 3*cos(theta1 + theta2)*sin(theta1 + theta2)*sin(theta1)))/(m*(24*l*cos(theta1)^2 - 64*l + 24*l*sin(theta1)^2 + 24*l*cos(theta1 + theta2)^2 + 24*l*sin(theta1 + theta2)^2 - 9*l*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*l*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*l*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1)))) + 2*l*theta1d^2*sin(theta1) + l*m*((12*(cos(theta1)*sin(theta1) + cos(theta1 + theta2)*sin(theta1 + theta2)))/(m*(24*cos(theta1 + theta2)^2 + 24*sin(theta1 + theta2)^2 + 24*cos(theta1)^2 + 24*sin(theta1)^2 - 9*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1) - 64)) - (6*l*cos(theta1)*(8*sin(theta1) - 3*cos(theta1 + theta2)^2*sin(theta1) + 3*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)))/(m*(24*l*cos(theta1)^2 - 64*l + 24*l*sin(theta1)^2 + 24*l*cos(theta1 + theta2)^2 + 24*l*sin(theta1 + theta2)^2 - 9*l*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*l*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*l*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1))))*(theta1d^2*cos(theta1 + theta2) - theta1d^2*cos(theta1) + theta2d^2*cos(theta1 + theta2) + 2*theta1d*theta2d*cos(theta1 + theta2)) + g*l*m*(cos(theta1 + theta2) - cos(theta1))*((3*(8*cos(theta1) - 3*sin(theta1 + theta2)^2*cos(theta1) + 3*cos(theta1 + theta2)*sin(theta1 + theta2)*sin(theta1)))/(m*(24*l*cos(theta1)^2 - 64*l + 24*l*sin(theta1)^2 + 24*l*cos(theta1 + theta2)^2 + 24*l*sin(theta1 + theta2)^2 - 9*l*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*l*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*l*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1))) + (12*l*cos(theta1)*(3*cos(theta1 + theta2)^2 + 3*sin(theta1 + theta2)^2 - 8))/(m*(24*l^2*cos(theta1 + theta2)^2 + 24*l^2*sin(theta1 + theta2)^2 + 24*l^2*cos(theta1)^2 + 24*l^2*sin(theta1)^2 - 64*l^2 - 9*l^2*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*l^2*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*l^2*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1)))))*(3*cos(theta1 + theta2)^2 + 3*cos(theta1)^2 - 24*sin(theta1)^2 + 9*cos(theta1 + theta2)^2*sin(theta1)^2 + 18*sin(theta1 + theta2)^2*sin(theta1)^2 + 9*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1) - 8))/(12*cos(theta1)^2 + 12*sin(theta1)^2 - 9*cos(theta1 + theta2)^2*cos(theta1)^2 - 9*sin(theta1 + theta2)^2*sin(theta1)^2 - 18*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1) + 4) - (3*m*(((3*(8*sin(theta1 + theta2) + 8*sin(theta1) - 3*sin(theta1 + theta2)*cos(theta1)^2 - 3*cos(theta1 + theta2)^2*sin(theta1) + 3*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1) + 3*cos(theta1 + theta2)*cos(theta1)*sin(theta1)))/(m*(24*l*cos(theta1)^2 - 64*l + 24*l*sin(theta1)^2 + 24*l*cos(theta1 + theta2)^2 + 24*l*sin(theta1 + theta2)^2 - 9*l*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*l*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*l*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1))) - (12*l*sin(theta1)*(3*sin(theta1 + theta2)*sin(theta1) - 3*cos(theta1 + theta2)^2 - 3*sin(theta1 + theta2)^2 + 3*cos(theta1 + theta2)*cos(theta1) + 8))/(m*(24*l^2*cos(theta1 + theta2)^2 + 24*l^2*sin(theta1 + theta2)^2 + 24*l^2*cos(theta1)^2 + 24*l^2*sin(theta1)^2 - 64*l^2 - 9*l^2*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*l^2*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*l^2*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1))))*(tau - g*l*m*cos(theta1 + theta2)) + (2*g*m - l*m*(theta1d^2*sin(theta1 + theta2) - theta1d^2*sin(theta1) + theta2d^2*sin(theta1 + theta2) + 2*theta1d*theta2d*sin(theta1 + theta2)))*((12*(cos(theta1)*sin(theta1) + cos(theta1 + theta2)*sin(theta1 + theta2)))/(m*(24*cos(theta1 + theta2)^2 + 24*sin(theta1 + theta2)^2 + 24*cos(theta1)^2 + 24*sin(theta1)^2 - 9*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1) - 64)) - (6*l*sin(theta1)*(8*cos(theta1) - 3*sin(theta1 + theta2)^2*cos(theta1) + 3*cos(theta1 + theta2)*sin(theta1 + theta2)*sin(theta1)))/(m*(24*l*cos(theta1)^2 - 64*l + 24*l*sin(theta1)^2 + 24*l*cos(theta1 + theta2)^2 + 24*l*sin(theta1 + theta2)^2 - 9*l*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*l*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*l*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1)))) - 2*l*theta1d^2*cos(theta1) - l*m*((4*(3*cos(theta1 + theta2)^2 + 3*cos(theta1)^2 - 8))/(m*(24*cos(theta1 + theta2)^2 + 24*sin(theta1 + theta2)^2 + 24*cos(theta1)^2 + 24*sin(theta1)^2 - 9*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1) - 64)) + (6*l*sin(theta1)*(8*sin(theta1) - 3*cos(theta1 + theta2)^2*sin(theta1) + 3*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)))/(m*(24*l*cos(theta1)^2 - 64*l + 24*l*sin(theta1)^2 + 24*l*cos(theta1 + theta2)^2 + 24*l*sin(theta1 + theta2)^2 - 9*l*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*l*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*l*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1))))*(theta1d^2*cos(theta1 + theta2) - theta1d^2*cos(theta1) + theta2d^2*cos(theta1 + theta2) + 2*theta1d*theta2d*cos(theta1 + theta2)) + g*l*m*(cos(theta1 + theta2) - cos(theta1))*((3*(8*sin(theta1) - 3*cos(theta1 + theta2)^2*sin(theta1) + 3*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)))/(m*(24*l*cos(theta1)^2 - 64*l + 24*l*sin(theta1)^2 + 24*l*cos(theta1 + theta2)^2 + 24*l*sin(theta1 + theta2)^2 - 9*l*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*l*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*l*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1))) + (12*l*sin(theta1)*(3*cos(theta1 + theta2)^2 + 3*sin(theta1 + theta2)^2 - 8))/(m*(24*l^2*cos(theta1 + theta2)^2 + 24*l^2*sin(theta1 + theta2)^2 + 24*l^2*cos(theta1)^2 + 24*l^2*sin(theta1)^2 - 64*l^2 - 9*l^2*cos(theta1 + theta2)^2*sin(theta1)^2 - 9*l^2*sin(theta1 + theta2)^2*cos(theta1)^2 + 18*l^2*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1)))))*(3*cos(theta1 + theta2)*sin(theta1 + theta2)*sin(theta1)^2 - 2*cos(theta1 + theta2)*sin(theta1 + theta2) - 18*cos(theta1)*sin(theta1) + 9*cos(theta1 + theta2)^2*cos(theta1)*sin(theta1) + 9*sin(theta1 + theta2)^2*cos(theta1)*sin(theta1) + 3*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)^2))/(2*(12*cos(theta1)^2 + 12*sin(theta1)^2 - 9*cos(theta1 + theta2)^2*cos(theta1)^2 - 9*sin(theta1 + theta2)^2*sin(theta1)^2 - 18*cos(theta1 + theta2)*sin(theta1 + theta2)*cos(theta1)*sin(theta1) + 4));

%% slipping

lam_n=(3*tau*cos(theta1 + theta2) - 81*tau*cos(theta1) - 27*tau*cos(theta1 - theta2) + 9*tau*cos(theta1 + 2*theta2) + 41*g*l*m + 2*l^2*m*theta1d^2*sin(theta1 + theta2) + 2*l^2*m*theta2d^2*sin(theta1 + theta2) - 54*l^2*m*theta1d^2*sin(theta1) - 18*l^2*m*theta1d^2*sin(theta1 - theta2) + 6*l^2*m*theta1d^2*sin(theta1 + 2*theta2) - 18*l^2*m*theta2d^2*sin(theta1 - theta2) - 9*g*l*m*cos(2*theta2) + 4*l^2*m*theta1d*theta2d*sin(theta1 + theta2) - 36*l^2*m*theta1d*theta2d*sin(theta1 - theta2))/(2*l*(27*cos(2*theta1) - 9*cos(2*theta2) - 3*cos(2*theta1 + 2*theta2) + 27*mu*sigma*sin(2*theta1) - 3*mu*sigma*sin(2*theta1 + 2*theta2) + 41));


end