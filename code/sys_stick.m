function dXdt = sys_stick(t,X)

m=0.3;
g=10;
l=0.15;
dXdt = zeros(8,1);

x = X(1);
y = X(2);
theta_1 = X(3);
theta_2 = X(4);

dXdt(1) = X(5); x_d = X(5);
dXdt(2) = X(6); y_d = X(6);
dXdt(3) = X(7); theta_1d = X(7);
dXdt(4) = X(8); theta_2d= X(8);
tau=tau_calc(t,X);

dXdt(5) = (12*(cos(theta_1)*sin(theta_1) + cos(theta_1 + theta_2)*sin(theta_1 + theta_2))*((27*tau*cos(theta_1) - 21*tau*cos(theta_1 + theta_2) + 27*tau*cos(theta_1 - theta_2) - 9*tau*cos(theta_1 + 2*theta_2) - 41*g*l*m - 3*g*l*m*cos(2*theta_1 + 2*theta_2) + 10*l^2*m*theta_1d^2*sin(theta_1 + theta_2) + 10*l^2*m*theta_2d^2*sin(theta_1 + theta_2) + 90*l^2*m*theta_1d^2*sin(theta_1) + 18*l^2*m*theta_1d^2*sin(theta_1 - theta_2) - 6*l^2*m*theta_1d^2*sin(theta_1 + 2*theta_2) + 18*l^2*m*theta_2d^2*sin(theta_1 - theta_2) + 27*g*l*m*cos(2*theta_1) + 9*g*l*m*cos(2*theta_2) + 20*l^2*m*theta_1d*theta_2d*sin(theta_1 + theta_2) + 36*l^2*m*theta_1d*theta_2d*sin(theta_1 - theta_2))/(2*l*(9*cos(2*theta_2) - 23)) - 2*g*m + l*m*(theta_1d^2*sin(theta_1 + theta_2) - theta_1d^2*sin(theta_1) + theta_2d^2*sin(theta_1 + theta_2) + 2*theta_1d*theta_2d*sin(theta_1 + theta_2))))/(m*(24*cos(theta_1 + theta_2)^2 + 24*sin(theta_1 + theta_2)^2 + 24*cos(theta_1)^2 + 24*sin(theta_1)^2 - 9*cos(theta_1 + theta_2)^2*sin(theta_1)^2 - 9*sin(theta_1 + theta_2)^2*cos(theta_1)^2 + 18*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*cos(theta_1)*sin(theta_1) - 64)) - (3*((cos(theta_1)*(27*tau*cos(theta_1) - 21*tau*cos(theta_1 + theta_2) + 27*tau*cos(theta_1 - theta_2) - 9*tau*cos(theta_1 + 2*theta_2) - 41*g*l*m - 3*g*l*m*cos(2*theta_1 + 2*theta_2) + 10*l^2*m*theta_1d^2*sin(theta_1 + theta_2) + 10*l^2*m*theta_2d^2*sin(theta_1 + theta_2) + 90*l^2*m*theta_1d^2*sin(theta_1) + 18*l^2*m*theta_1d^2*sin(theta_1 - theta_2) - 6*l^2*m*theta_1d^2*sin(theta_1 + 2*theta_2) + 18*l^2*m*theta_2d^2*sin(theta_1 - theta_2) + 27*g*l*m*cos(2*theta_1) + 9*g*l*m*cos(2*theta_2) + 20*l^2*m*theta_1d*theta_2d*sin(theta_1 + theta_2) + 36*l^2*m*theta_1d*theta_2d*sin(theta_1 - theta_2)))/(9*cos(2*theta_2) - 23) - (sin(theta_1)*(21*tau*sin(theta_1 + theta_2) - 27*tau*sin(theta_1) - 27*tau*sin(theta_1 - theta_2) + 9*tau*sin(theta_1 + 2*theta_2) + 10*l^2*m*theta_1d^2*cos(theta_1 + theta_2) + 10*l^2*m*theta_2d^2*cos(theta_1 + theta_2) + 3*g*l*m*sin(2*theta_1 + 2*theta_2) + 90*l^2*m*theta_1d^2*cos(theta_1) + 18*l^2*m*theta_1d^2*cos(theta_1 - theta_2) - 6*l^2*m*theta_1d^2*cos(theta_1 + 2*theta_2) + 18*l^2*m*theta_2d^2*cos(theta_1 - theta_2) - 27*g*l*m*sin(2*theta_1) + 20*l^2*m*theta_1d*theta_2d*cos(theta_1 + theta_2) + 36*l^2*m*theta_1d*theta_2d*cos(theta_1 - theta_2)))/(9*cos(2*theta_2) - 23) + g*l*m*(cos(theta_1 + theta_2) - cos(theta_1)))*(8*sin(theta_1) - 3*cos(theta_1 + theta_2)^2*sin(theta_1) + 3*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*cos(theta_1)))/(m*(24*l*cos(theta_1)^2 - 64*l + 24*l*sin(theta_1)^2 + 24*l*cos(theta_1 + theta_2)^2 + 24*l*sin(theta_1 + theta_2)^2 - 9*l*cos(theta_1 + theta_2)^2*sin(theta_1)^2 - 9*l*sin(theta_1 + theta_2)^2*cos(theta_1)^2 + 18*l*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*cos(theta_1)*sin(theta_1))) + (4*(l*m*(theta_1d^2*cos(theta_1 + theta_2) - theta_1d^2*cos(theta_1) + theta_2d^2*cos(theta_1 + theta_2) + 2*theta_1d*theta_2d*cos(theta_1 + theta_2)) + (21*tau*sin(theta_1 + theta_2) - 27*tau*sin(theta_1) - 27*tau*sin(theta_1 - theta_2) + 9*tau*sin(theta_1 + 2*theta_2) + 10*l^2*m*theta_1d^2*cos(theta_1 + theta_2) + 10*l^2*m*theta_2d^2*cos(theta_1 + theta_2) + 3*g*l*m*sin(2*theta_1 + 2*theta_2) + 90*l^2*m*theta_1d^2*cos(theta_1) + 18*l^2*m*theta_1d^2*cos(theta_1 - theta_2) - 6*l^2*m*theta_1d^2*cos(theta_1 + 2*theta_2) + 18*l^2*m*theta_2d^2*cos(theta_1 - theta_2) - 27*g*l*m*sin(2*theta_1) + 20*l^2*m*theta_1d*theta_2d*cos(theta_1 + theta_2) + 36*l^2*m*theta_1d*theta_2d*cos(theta_1 - theta_2))/(2*l*(9*cos(2*theta_2) - 23)))*(3*cos(theta_1 + theta_2)^2 + 3*cos(theta_1)^2 - 8))/(m*(24*cos(theta_1 + theta_2)^2 + 24*sin(theta_1 + theta_2)^2 + 24*cos(theta_1)^2 + 24*sin(theta_1)^2 - 9*cos(theta_1 + theta_2)^2*sin(theta_1)^2 - 9*sin(theta_1 + theta_2)^2*cos(theta_1)^2 + 18*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*cos(theta_1)*sin(theta_1) - 64)) - (3*(tau - g*l*m*cos(theta_1 + theta_2))*(8*sin(theta_1 + theta_2) + 8*sin(theta_1) - 3*sin(theta_1 + theta_2)*cos(theta_1)^2 - 3*cos(theta_1 + theta_2)^2*sin(theta_1) + 3*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*cos(theta_1) + 3*cos(theta_1 + theta_2)*cos(theta_1)*sin(theta_1)))/(m*(24*l*cos(theta_1)^2 - 64*l + 24*l*sin(theta_1)^2 + 24*l*cos(theta_1 + theta_2)^2 + 24*l*sin(theta_1 + theta_2)^2 - 9*l*cos(theta_1 + theta_2)^2*sin(theta_1)^2 - 9*l*sin(theta_1 + theta_2)^2*cos(theta_1)^2 + 18*l*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*cos(theta_1)*sin(theta_1)));
dXdt(6) = (3*((cos(theta_1)*(27*tau*cos(theta_1) - 21*tau*cos(theta_1 + theta_2) + 27*tau*cos(theta_1 - theta_2) - 9*tau*cos(theta_1 + 2*theta_2) - 41*g*l*m - 3*g*l*m*cos(2*theta_1 + 2*theta_2) + 10*l^2*m*theta_1d^2*sin(theta_1 + theta_2) + 10*l^2*m*theta_2d^2*sin(theta_1 + theta_2) + 90*l^2*m*theta_1d^2*sin(theta_1) + 18*l^2*m*theta_1d^2*sin(theta_1 - theta_2) - 6*l^2*m*theta_1d^2*sin(theta_1 + 2*theta_2) + 18*l^2*m*theta_2d^2*sin(theta_1 - theta_2) + 27*g*l*m*cos(2*theta_1) + 9*g*l*m*cos(2*theta_2) + 20*l^2*m*theta_1d*theta_2d*sin(theta_1 + theta_2) + 36*l^2*m*theta_1d*theta_2d*sin(theta_1 - theta_2)))/(9*cos(2*theta_2) - 23) - (sin(theta_1)*(21*tau*sin(theta_1 + theta_2) - 27*tau*sin(theta_1) - 27*tau*sin(theta_1 - theta_2) + 9*tau*sin(theta_1 + 2*theta_2) + 10*l^2*m*theta_1d^2*cos(theta_1 + theta_2) + 10*l^2*m*theta_2d^2*cos(theta_1 + theta_2) + 3*g*l*m*sin(2*theta_1 + 2*theta_2) + 90*l^2*m*theta_1d^2*cos(theta_1) + 18*l^2*m*theta_1d^2*cos(theta_1 - theta_2) - 6*l^2*m*theta_1d^2*cos(theta_1 + 2*theta_2) + 18*l^2*m*theta_2d^2*cos(theta_1 - theta_2) - 27*g*l*m*sin(2*theta_1) + 20*l^2*m*theta_1d*theta_2d*cos(theta_1 + theta_2) + 36*l^2*m*theta_1d*theta_2d*cos(theta_1 - theta_2)))/(9*cos(2*theta_2) - 23) + g*l*m*(cos(theta_1 + theta_2) - cos(theta_1)))*(8*cos(theta_1) - 3*sin(theta_1 + theta_2)^2*cos(theta_1) + 3*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*sin(theta_1)))/(m*(24*l*cos(theta_1)^2 - 64*l + 24*l*sin(theta_1)^2 + 24*l*cos(theta_1 + theta_2)^2 + 24*l*sin(theta_1 + theta_2)^2 - 9*l*cos(theta_1 + theta_2)^2*sin(theta_1)^2 - 9*l*sin(theta_1 + theta_2)^2*cos(theta_1)^2 + 18*l*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*cos(theta_1)*sin(theta_1))) + (12*(cos(theta_1)*sin(theta_1) + cos(theta_1 + theta_2)*sin(theta_1 + theta_2))*(l*m*(theta_1d^2*cos(theta_1 + theta_2) - theta_1d^2*cos(theta_1) + theta_2d^2*cos(theta_1 + theta_2) + 2*theta_1d*theta_2d*cos(theta_1 + theta_2)) + (21*tau*sin(theta_1 + theta_2) - 27*tau*sin(theta_1) - 27*tau*sin(theta_1 - theta_2) + 9*tau*sin(theta_1 + 2*theta_2) + 10*l^2*m*theta_1d^2*cos(theta_1 + theta_2) + 10*l^2*m*theta_2d^2*cos(theta_1 + theta_2) + 3*g*l*m*sin(2*theta_1 + 2*theta_2) + 90*l^2*m*theta_1d^2*cos(theta_1) + 18*l^2*m*theta_1d^2*cos(theta_1 - theta_2) - 6*l^2*m*theta_1d^2*cos(theta_1 + 2*theta_2) + 18*l^2*m*theta_2d^2*cos(theta_1 - theta_2) - 27*g*l*m*sin(2*theta_1) + 20*l^2*m*theta_1d*theta_2d*cos(theta_1 + theta_2) + 36*l^2*m*theta_1d*theta_2d*cos(theta_1 - theta_2))/(2*l*(9*cos(2*theta_2) - 23))))/(m*(24*cos(theta_1 + theta_2)^2 + 24*sin(theta_1 + theta_2)^2 + 24*cos(theta_1)^2 + 24*sin(theta_1)^2 - 9*cos(theta_1 + theta_2)^2*sin(theta_1)^2 - 9*sin(theta_1 + theta_2)^2*cos(theta_1)^2 + 18*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*cos(theta_1)*sin(theta_1) - 64)) + (3*(tau - g*l*m*cos(theta_1 + theta_2))*(8*cos(theta_1 + theta_2) + 8*cos(theta_1) - 3*cos(theta_1 + theta_2)*sin(theta_1)^2 - 3*sin(theta_1 + theta_2)^2*cos(theta_1) + 3*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*sin(theta_1) + 3*sin(theta_1 + theta_2)*cos(theta_1)*sin(theta_1)))/(m*(24*l*cos(theta_1)^2 - 64*l + 24*l*sin(theta_1)^2 + 24*l*cos(theta_1 + theta_2)^2 + 24*l*sin(theta_1 + theta_2)^2 - 9*l*cos(theta_1 + theta_2)^2*sin(theta_1)^2 - 9*l*sin(theta_1 + theta_2)^2*cos(theta_1)^2 + 18*l*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*cos(theta_1)*sin(theta_1))) + (4*((27*tau*cos(theta_1) - 21*tau*cos(theta_1 + theta_2) + 27*tau*cos(theta_1 - theta_2) - 9*tau*cos(theta_1 + 2*theta_2) - 41*g*l*m - 3*g*l*m*cos(2*theta_1 + 2*theta_2) + 10*l^2*m*theta_1d^2*sin(theta_1 + theta_2) + 10*l^2*m*theta_2d^2*sin(theta_1 + theta_2) + 90*l^2*m*theta_1d^2*sin(theta_1) + 18*l^2*m*theta_1d^2*sin(theta_1 - theta_2) - 6*l^2*m*theta_1d^2*sin(theta_1 + 2*theta_2) + 18*l^2*m*theta_2d^2*sin(theta_1 - theta_2) + 27*g*l*m*cos(2*theta_1) + 9*g*l*m*cos(2*theta_2) + 20*l^2*m*theta_1d*theta_2d*sin(theta_1 + theta_2) + 36*l^2*m*theta_1d*theta_2d*sin(theta_1 - theta_2))/(2*l*(9*cos(2*theta_2) - 23)) - 2*g*m + l*m*(theta_1d^2*sin(theta_1 + theta_2) - theta_1d^2*sin(theta_1) + theta_2d^2*sin(theta_1 + theta_2) + 2*theta_1d*theta_2d*sin(theta_1 + theta_2)))*(3*sin(theta_1 + theta_2)^2 + 3*sin(theta_1)^2 - 8))/(m*(24*cos(theta_1 + theta_2)^2 + 24*sin(theta_1 + theta_2)^2 + 24*cos(theta_1)^2 + 24*sin(theta_1)^2 - 9*cos(theta_1 + theta_2)^2*sin(theta_1)^2 - 9*sin(theta_1 + theta_2)^2*cos(theta_1)^2 + 18*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*cos(theta_1)*sin(theta_1) - 64));
dXdt(7) = (3*(l*m*(theta_1d^2*cos(theta_1 + theta_2) - theta_1d^2*cos(theta_1) + theta_2d^2*cos(theta_1 + theta_2) + 2*theta_1d*theta_2d*cos(theta_1 + theta_2)) + (21*tau*sin(theta_1 + theta_2) - 27*tau*sin(theta_1) - 27*tau*sin(theta_1 - theta_2) + 9*tau*sin(theta_1 + 2*theta_2) + 10*l^2*m*theta_1d^2*cos(theta_1 + theta_2) + 10*l^2*m*theta_2d^2*cos(theta_1 + theta_2) + 3*g*l*m*sin(2*theta_1 + 2*theta_2) + 90*l^2*m*theta_1d^2*cos(theta_1) + 18*l^2*m*theta_1d^2*cos(theta_1 - theta_2) - 6*l^2*m*theta_1d^2*cos(theta_1 + 2*theta_2) + 18*l^2*m*theta_2d^2*cos(theta_1 - theta_2) - 27*g*l*m*sin(2*theta_1) + 20*l^2*m*theta_1d*theta_2d*cos(theta_1 + theta_2) + 36*l^2*m*theta_1d*theta_2d*cos(theta_1 - theta_2))/(2*l*(9*cos(2*theta_2) - 23)))*(8*sin(theta_1) - 3*cos(theta_1 + theta_2)^2*sin(theta_1) + 3*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*cos(theta_1)))/(m*(24*l*cos(theta_1)^2 - 64*l + 24*l*sin(theta_1)^2 + 24*l*cos(theta_1 + theta_2)^2 + 24*l*sin(theta_1 + theta_2)^2 - 9*l*cos(theta_1 + theta_2)^2*sin(theta_1)^2 - 9*l*sin(theta_1 + theta_2)^2*cos(theta_1)^2 + 18*l*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*cos(theta_1)*sin(theta_1))) - (6*((cos(theta_1)*(27*tau*cos(theta_1) - 21*tau*cos(theta_1 + theta_2) + 27*tau*cos(theta_1 - theta_2) - 9*tau*cos(theta_1 + 2*theta_2) - 41*g*l*m - 3*g*l*m*cos(2*theta_1 + 2*theta_2) + 10*l^2*m*theta_1d^2*sin(theta_1 + theta_2) + 10*l^2*m*theta_2d^2*sin(theta_1 + theta_2) + 90*l^2*m*theta_1d^2*sin(theta_1) + 18*l^2*m*theta_1d^2*sin(theta_1 - theta_2) - 6*l^2*m*theta_1d^2*sin(theta_1 + 2*theta_2) + 18*l^2*m*theta_2d^2*sin(theta_1 - theta_2) + 27*g*l*m*cos(2*theta_1) + 9*g*l*m*cos(2*theta_2) + 20*l^2*m*theta_1d*theta_2d*sin(theta_1 + theta_2) + 36*l^2*m*theta_1d*theta_2d*sin(theta_1 - theta_2)))/(9*cos(2*theta_2) - 23) - (sin(theta_1)*(21*tau*sin(theta_1 + theta_2) - 27*tau*sin(theta_1) - 27*tau*sin(theta_1 - theta_2) + 9*tau*sin(theta_1 + 2*theta_2) + 10*l^2*m*theta_1d^2*cos(theta_1 + theta_2) + 10*l^2*m*theta_2d^2*cos(theta_1 + theta_2) + 3*g*l*m*sin(2*theta_1 + 2*theta_2) + 90*l^2*m*theta_1d^2*cos(theta_1) + 18*l^2*m*theta_1d^2*cos(theta_1 - theta_2) - 6*l^2*m*theta_1d^2*cos(theta_1 + 2*theta_2) + 18*l^2*m*theta_2d^2*cos(theta_1 - theta_2) - 27*g*l*m*sin(2*theta_1) + 20*l^2*m*theta_1d*theta_2d*cos(theta_1 + theta_2) + 36*l^2*m*theta_1d*theta_2d*cos(theta_1 - theta_2)))/(9*cos(2*theta_2) - 23) + g*l*m*(cos(theta_1 + theta_2) - cos(theta_1)))*(3*cos(theta_1 + theta_2)^2 + 3*sin(theta_1 + theta_2)^2 - 8))/(m*(24*l^2*cos(theta_1 + theta_2)^2 + 24*l^2*sin(theta_1 + theta_2)^2 + 24*l^2*cos(theta_1)^2 + 24*l^2*sin(theta_1)^2 - 64*l^2 - 9*l^2*cos(theta_1 + theta_2)^2*sin(theta_1)^2 - 9*l^2*sin(theta_1 + theta_2)^2*cos(theta_1)^2 + 18*l^2*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*cos(theta_1)*sin(theta_1))) - (3*((27*tau*cos(theta_1) - 21*tau*cos(theta_1 + theta_2) + 27*tau*cos(theta_1 - theta_2) - 9*tau*cos(theta_1 + 2*theta_2) - 41*g*l*m - 3*g*l*m*cos(2*theta_1 + 2*theta_2) + 10*l^2*m*theta_1d^2*sin(theta_1 + theta_2) + 10*l^2*m*theta_2d^2*sin(theta_1 + theta_2) + 90*l^2*m*theta_1d^2*sin(theta_1) + 18*l^2*m*theta_1d^2*sin(theta_1 - theta_2) - 6*l^2*m*theta_1d^2*sin(theta_1 + 2*theta_2) + 18*l^2*m*theta_2d^2*sin(theta_1 - theta_2) + 27*g*l*m*cos(2*theta_1) + 9*g*l*m*cos(2*theta_2) + 20*l^2*m*theta_1d*theta_2d*sin(theta_1 + theta_2) + 36*l^2*m*theta_1d*theta_2d*sin(theta_1 - theta_2))/(2*l*(9*cos(2*theta_2) - 23)) - 2*g*m + l*m*(theta_1d^2*sin(theta_1 + theta_2) - theta_1d^2*sin(theta_1) + theta_2d^2*sin(theta_1 + theta_2) + 2*theta_1d*theta_2d*sin(theta_1 + theta_2)))*(8*cos(theta_1) - 3*sin(theta_1 + theta_2)^2*cos(theta_1) + 3*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*sin(theta_1)))/(m*(24*l*cos(theta_1)^2 - 64*l + 24*l*sin(theta_1)^2 + 24*l*cos(theta_1 + theta_2)^2 + 24*l*sin(theta_1 + theta_2)^2 - 9*l*cos(theta_1 + theta_2)^2*sin(theta_1)^2 - 9*l*sin(theta_1 + theta_2)^2*cos(theta_1)^2 + 18*l*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*cos(theta_1)*sin(theta_1))) + (6*(tau - g*l*m*cos(theta_1 + theta_2))*(3*sin(theta_1 + theta_2)*sin(theta_1) - 3*cos(theta_1 + theta_2)^2 - 3*sin(theta_1 + theta_2)^2 + 3*cos(theta_1 + theta_2)*cos(theta_1) + 8))/(m*(24*l^2*cos(theta_1 + theta_2)^2 + 24*l^2*sin(theta_1 + theta_2)^2 + 24*l^2*cos(theta_1)^2 + 24*l^2*sin(theta_1)^2 - 64*l^2 - 9*l^2*cos(theta_1 + theta_2)^2*sin(theta_1)^2 - 9*l^2*sin(theta_1 + theta_2)^2*cos(theta_1)^2 + 18*l^2*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*cos(theta_1)*sin(theta_1)));
dXdt(8) = (6*(tau - g*l*m*cos(theta_1 + theta_2))*(3*cos(theta_1 + theta_2)^2 - 6*sin(theta_1 + theta_2)*sin(theta_1) + 3*sin(theta_1 + theta_2)^2 + 3*cos(theta_1)^2 + 3*sin(theta_1)^2 - 6*cos(theta_1 + theta_2)*cos(theta_1) - 16))/(m*(24*l^2*cos(theta_1 + theta_2)^2 + 24*l^2*sin(theta_1 + theta_2)^2 + 24*l^2*cos(theta_1)^2 + 24*l^2*sin(theta_1)^2 - 64*l^2 - 9*l^2*cos(theta_1 + theta_2)^2*sin(theta_1)^2 - 9*l^2*sin(theta_1 + theta_2)^2*cos(theta_1)^2 + 18*l^2*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*cos(theta_1)*sin(theta_1))) - (6*((cos(theta_1)*(27*tau*cos(theta_1) - 21*tau*cos(theta_1 + theta_2) + 27*tau*cos(theta_1 - theta_2) - 9*tau*cos(theta_1 + 2*theta_2) - 41*g*l*m - 3*g*l*m*cos(2*theta_1 + 2*theta_2) + 10*l^2*m*theta_1d^2*sin(theta_1 + theta_2) + 10*l^2*m*theta_2d^2*sin(theta_1 + theta_2) + 90*l^2*m*theta_1d^2*sin(theta_1) + 18*l^2*m*theta_1d^2*sin(theta_1 - theta_2) - 6*l^2*m*theta_1d^2*sin(theta_1 + 2*theta_2) + 18*l^2*m*theta_2d^2*sin(theta_1 - theta_2) + 27*g*l*m*cos(2*theta_1) + 9*g*l*m*cos(2*theta_2) + 20*l^2*m*theta_1d*theta_2d*sin(theta_1 + theta_2) + 36*l^2*m*theta_1d*theta_2d*sin(theta_1 - theta_2)))/(9*cos(2*theta_2) - 23) - (sin(theta_1)*(21*tau*sin(theta_1 + theta_2) - 27*tau*sin(theta_1) - 27*tau*sin(theta_1 - theta_2) + 9*tau*sin(theta_1 + 2*theta_2) + 10*l^2*m*theta_1d^2*cos(theta_1 + theta_2) + 10*l^2*m*theta_2d^2*cos(theta_1 + theta_2) + 3*g*l*m*sin(2*theta_1 + 2*theta_2) + 90*l^2*m*theta_1d^2*cos(theta_1) + 18*l^2*m*theta_1d^2*cos(theta_1 - theta_2) - 6*l^2*m*theta_1d^2*cos(theta_1 + 2*theta_2) + 18*l^2*m*theta_2d^2*cos(theta_1 - theta_2) - 27*g*l*m*sin(2*theta_1) + 20*l^2*m*theta_1d*theta_2d*cos(theta_1 + theta_2) + 36*l^2*m*theta_1d*theta_2d*cos(theta_1 - theta_2)))/(9*cos(2*theta_2) - 23) + g*l*m*(cos(theta_1 + theta_2) - cos(theta_1)))*(3*sin(theta_1 + theta_2)*sin(theta_1) - 3*cos(theta_1 + theta_2)^2 - 3*sin(theta_1 + theta_2)^2 + 3*cos(theta_1 + theta_2)*cos(theta_1) + 8))/(m*(24*l^2*cos(theta_1 + theta_2)^2 + 24*l^2*sin(theta_1 + theta_2)^2 + 24*l^2*cos(theta_1)^2 + 24*l^2*sin(theta_1)^2 - 64*l^2 - 9*l^2*cos(theta_1 + theta_2)^2*sin(theta_1)^2 - 9*l^2*sin(theta_1 + theta_2)^2*cos(theta_1)^2 + 18*l^2*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*cos(theta_1)*sin(theta_1))) - (3*(l*m*(theta_1d^2*cos(theta_1 + theta_2) - theta_1d^2*cos(theta_1) + theta_2d^2*cos(theta_1 + theta_2) + 2*theta_1d*theta_2d*cos(theta_1 + theta_2)) + (21*tau*sin(theta_1 + theta_2) - 27*tau*sin(theta_1) - 27*tau*sin(theta_1 - theta_2) + 9*tau*sin(theta_1 + 2*theta_2) + 10*l^2*m*theta_1d^2*cos(theta_1 + theta_2) + 10*l^2*m*theta_2d^2*cos(theta_1 + theta_2) + 3*g*l*m*sin(2*theta_1 + 2*theta_2) + 90*l^2*m*theta_1d^2*cos(theta_1) + 18*l^2*m*theta_1d^2*cos(theta_1 - theta_2) - 6*l^2*m*theta_1d^2*cos(theta_1 + 2*theta_2) + 18*l^2*m*theta_2d^2*cos(theta_1 - theta_2) - 27*g*l*m*sin(2*theta_1) + 20*l^2*m*theta_1d*theta_2d*cos(theta_1 + theta_2) + 36*l^2*m*theta_1d*theta_2d*cos(theta_1 - theta_2))/(2*l*(9*cos(2*theta_2) - 23)))*(8*sin(theta_1 + theta_2) + 8*sin(theta_1) - 3*sin(theta_1 + theta_2)*cos(theta_1)^2 - 3*cos(theta_1 + theta_2)^2*sin(theta_1) + 3*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*cos(theta_1) + 3*cos(theta_1 + theta_2)*cos(theta_1)*sin(theta_1)))/(m*(24*l*cos(theta_1)^2 - 64*l + 24*l*sin(theta_1)^2 + 24*l*cos(theta_1 + theta_2)^2 + 24*l*sin(theta_1 + theta_2)^2 - 9*l*cos(theta_1 + theta_2)^2*sin(theta_1)^2 - 9*l*sin(theta_1 + theta_2)^2*cos(theta_1)^2 + 18*l*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*cos(theta_1)*sin(theta_1))) + (3*((27*tau*cos(theta_1) - 21*tau*cos(theta_1 + theta_2) + 27*tau*cos(theta_1 - theta_2) - 9*tau*cos(theta_1 + 2*theta_2) - 41*g*l*m - 3*g*l*m*cos(2*theta_1 + 2*theta_2) + 10*l^2*m*theta_1d^2*sin(theta_1 + theta_2) + 10*l^2*m*theta_2d^2*sin(theta_1 + theta_2) + 90*l^2*m*theta_1d^2*sin(theta_1) + 18*l^2*m*theta_1d^2*sin(theta_1 - theta_2) - 6*l^2*m*theta_1d^2*sin(theta_1 + 2*theta_2) + 18*l^2*m*theta_2d^2*sin(theta_1 - theta_2) + 27*g*l*m*cos(2*theta_1) + 9*g*l*m*cos(2*theta_2) + 20*l^2*m*theta_1d*theta_2d*sin(theta_1 + theta_2) + 36*l^2*m*theta_1d*theta_2d*sin(theta_1 - theta_2))/(2*l*(9*cos(2*theta_2) - 23)) - 2*g*m + l*m*(theta_1d^2*sin(theta_1 + theta_2) - theta_1d^2*sin(theta_1) + theta_2d^2*sin(theta_1 + theta_2) + 2*theta_1d*theta_2d*sin(theta_1 + theta_2)))*(8*cos(theta_1 + theta_2) + 8*cos(theta_1) - 3*cos(theta_1 + theta_2)*sin(theta_1)^2 - 3*sin(theta_1 + theta_2)^2*cos(theta_1) + 3*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*sin(theta_1) + 3*sin(theta_1 + theta_2)*cos(theta_1)*sin(theta_1)))/(m*(24*l*cos(theta_1)^2 - 64*l + 24*l*sin(theta_1)^2 + 24*l*cos(theta_1 + theta_2)^2 + 24*l*sin(theta_1 + theta_2)^2 - 9*l*cos(theta_1 + theta_2)^2*sin(theta_1)^2 - 9*l*sin(theta_1 + theta_2)^2*cos(theta_1)^2 + 18*l*cos(theta_1 + theta_2)*sin(theta_1 + theta_2)*cos(theta_1)*sin(theta_1)));
end
